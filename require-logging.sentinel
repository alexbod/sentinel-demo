##### Imports #####
import "tfplan"
import "strings"

##### Functions #####

# Find all name of a specific type from all modules using the tfplan import

find_name_from_plan = func(type) {

	resources = []

	for tfplan.module_paths as path {
		for tfplan.module(path).resources[type] else {} as name, instances {
			resources += [name]
		}
	}

	return resources
}

# Find all new zone_id of a aws_route53_query_log from all modules using the tfplan import

find_zoneid_from_plan = func(type) {

	resources = []

	for tfplan.module_paths as path {
		for tfplan.module(path).resources[type] else {} as name, instances {
			for instances as index, r {
				resources += [r.diff["zone_id"]["new"]]
			}
		}
	}
	return resources

}

zones_name = find_name_from_plan("aws_route53_zone")
zoneslog = find_zoneid_from_plan("aws_route53_query_log")

zoneslog_validated = func() {
	result = true
	for zones_name as t {
		if ("${aws_route53_zone." + t + ".zone_id}") not in zoneslog {
			print("Zone", t, "did not have logging enabled!")
			result = false
		}
	}

	return result
}

main = rule {
	zoneslog_validated()
}
