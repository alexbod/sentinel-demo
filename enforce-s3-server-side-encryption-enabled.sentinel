import "tfplan"


allowed_s3_unencrypted = [
  "b",
  "my-tf-test-bucket",
]

# Get all unencrypted S3 buckets from all modules
get_s3_buckets = func() {
    buckets = []
    for tfplan.module_paths as path {            
            resources = values(tfplan.module(path).resources.aws_s3_bucket) else []
            for resources as _, r {                
               if r[0].applied not contains "server_side_encryption_configuration" {
                  buckets += values(tfplan.module(path).resources.aws_s3_bucket) else []
               }
            }
    }
    return buckets
}
  
s3_buckets = get_s3_buckets()
print("Unencrypted s3 buckets:")
print("s3_buckets")

# Rule to require server-side encryption
s3_in_allowed_list = rule {
    all s3_buckets as _, instances {
      all instances as index, r {
        r.applied.bucket in allowed_s3_unencrypted
      }
   }
}
  
# Main rule that requires other rules to be true
main = rule {
  s3_in_allowed_list
}
