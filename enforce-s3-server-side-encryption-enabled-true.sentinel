import "tfplan/v2" as tfplan


allowed_s3_unencrypted = [
  "b",
  "bucket2",
]


// Find all aws_s3_bucket that will be created/updated and don't have serveri side encryption block
violatingS3Buckets = filter tfplan.resource_changes as _, rc {
	rc.type is "aws_s3_bucket" and
		rc.mode is "managed" and
		(rc.change.actions contains "create" or rc.change.actions contains "update") and
		(rc.change.after not contains "server_side_encryption_configuration" or
			length(rc.change.after.server_side_encryption_configuration) == 0)
}

// Rule to allow unencrypted S3 buckts fromthe list
s3_unencrypted = rule {
	for violatingS3Buckets as address, bucket {
		print(bucket)
		print(bucket["change"]["after"]["bucket"])
		r.applied.acl in allowed_s3_unencrypted
	}
}

for violatingS3Buckets as address, bucket {
	print(address + " does not have server side encryption configured.")
}

main = rule {
	(length(violatingS3Buckets) == 0) and (s3_unencrypted)
}
