import "tfplan/v2" as tfplan


allowed_s3_unencrypted = [
  "b",
  "my-tf-test-bucket",
]

// All S3 buckets
s3_buckets = []

// Find all aws_s3_bucket that will be created/updated and don't have server side encryption block
violatingS3Buckets = filter tfplan.resource_changes as _, rc {
	rc.type is "aws_s3_bucket" and
		rc.mode is "managed" and
		(rc.change.actions contains "create" or rc.change.actions contains "update") and
		(rc.change.after not contains "server_side_encryption_configuration" or
			length(rc.change.after.server_side_encryption_configuration) == 0)
}

// Loop through all s3_buckets
for violatingS3Buckets as address, bucket {
	s3_buckets += [bucket.change.after.bucket]
}

// Rule to allow unencrypted S3 buckets from allowed_s3_unencrypted list
s3_unencrypted_valid = rule {
	all s3_buckets as sb {
		sb in allowed_s3_unencrypted
	}
}

for violatingS3Buckets as address, bucket {
	print(address + " does not have server side encryption configured.")
}

main = rule {
	s3_unencrypted_valid else true
}
